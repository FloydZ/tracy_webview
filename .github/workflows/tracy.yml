name: emscripten

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: archlinux:base-devel
    steps:
    - name: Install dependencies
      run: pacman -Syu --noconfirm && pacman -S --noconfirm --needed cmake git unzip python ninja
    - name: Setup emscripten
      uses: mymindstorm/setup-emsdk@v14
      with:
        version: 3.1.67
    - name: Trust git repo
      run: git config --global --add safe.directory '*'
    - uses: actions/checkout@v4
    - name: Profiler GUI
      run: |
        git clone https://github.com/wolfpld/tracy/ 
        cd tracy 
        git apply ../patches/TracyInitFile.patch
        cmake -G Ninja -B profiler/build -S profiler -DCMAKE_BUILD_TYPE=MinSizeRel -DGIT_REV=${{ github.sha }} -DCMAKE_TOOLCHAIN_FILE=${{env.EMSDK}}/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake
        cmake --build profiler/build --parallel
    - name: Compress artifacts
      run: |
        gzip -k -9 tracy/profiler/build/tracy-profiler.js tracy/profiler/build/tracy-profiler.wasm
    - name: Find Artifacts
      id: find_artifacts
      run: |
        mkdir -p bin
        cp tracy/profiler/build/index.html bin
        cp tracy/profiler/build/tracy-profiler.data bin
        cp tracy/profiler/build/tracy-profiler.js bin
        cp tracy/profiler/build/tracy-profiler.js.gz bin
        cp tracy/profiler/build/tracy-profiler.wasm bin
        cp tracy/profiler/build/tracy-profiler.wasm.gz bin
        cp enable-threads.js bin
        tar -cvf artifacts.tar -C bin .
#    - uses: actions/upload-artifact@v4
#      with:
#        name: emscripten
#        path: bin

    - name: Upload artifact
      id: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: github-pages
        path: artifacts.tar
        retention-days: 20
        if-no-files-found: error
  deploy:
    needs: build
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 
  #  deploy:
  #    runs-on: ubuntu-latest
  #    needs: build
  #    if: github.ref == 'refs/heads/master'
  #    steps:
  #    - uses: actions/download-artifact@v4
  #    - uses: wlixcc/SFTP-Deploy-Action@v1.2.4
  #      with:
  #        username: ${{ secrets.USERNAME }}
  #        server: ${{ secrets.SERVER }}
  #        port: ${{ secrets.PORT }}
  #        ssh_private_key: ${{ secrets.PRIVATE_KEY }}
  #        local_path: './emscripten/*'
  #        remote_path: ${{ secrets.REMOTE_PATH }}
  #        sftp_only: true
